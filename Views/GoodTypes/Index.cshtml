@using CustomMVC.ViewModels;
@using CustomMVC.ViewModels.GoodTypeViewModel;
@model GoodTypeViewModel;

@{
    ViewData["Title"] = "Типы товаров";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string? Type = Model.FilterGoodTypeViewModel.Type;
    string? Measurement = Model.FilterGoodTypeViewModel.Measurement;
}

<h2 class="mb-4">Типы товаров</h2>

<div class="mb-3">
    <a asp-action="Create" class="btn btn-primary">Добавить новую запись</a>
</div>

@using (Html.BeginForm("Index", "GoodTypes", FormMethod.Get, new { @class = "form-inline mb-3" }))
{
    <fieldset class="form-group">
        <label for="Type" class="mr-2">Название типа:</label>
        @Html.TextBox("Type", Type, new { @class = "form-control mr-2", @id = "Type" })
    </fieldset>
    <fieldset class="form-group">
        <label for="Measurement" class="mr-2">Единица измерения:</label>
        @Html.TextBox("Measurement", Measurement, new { @class = "form-control mr-2", @id = "Measurement" })
    </fieldset>

    <input type="submit" value="Найти" class="btn btn-outline-success mt-1" />
}

<table class="table table-striped table-bordered">
    <thead class="thead-light">
        <tr>
            <th style="width: 150px;">
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.TypeSort"
                   asp-route-Type="@Type"
                   style="color: inherit; text-decoration: none; display: inline-flex; align-items: center;">
                    @Html.DisplayNameFor(model => model.FilterGoodTypeViewModel.Type)

                    @if (Model.SortViewModel.TypeSort == SortState.TypeAsc)
                    {
                        <span class="bi bi-arrow-up" style="margin-left: 5px;"></span>
                    }
                    else if (Model.SortViewModel.TypeSort == SortState.TypeDesc)
                    {
                        <span class="bi bi-arrow-down" style="margin-left: 5px;"></span>
                    }
                </a>
            </th>
            <th style="width: 150px;">
                <a asp-action="Index"
                   asp-route-sortOrder="@Model.SortViewModel.MeasurementSort"
                   asp-route-Measurement="@Measurement"
                   style="color: inherit; text-decoration: none; display: inline-flex; align-items: center;">
                    @Html.DisplayNameFor(model => model.FilterGoodTypeViewModel.Measurement)

                    @if (Model.SortViewModel.MeasurementSort == SortState.MeasurementAsc)
                    {
                        <span class="bi bi-arrow-up" style="margin-left: 5px;"></span>
                    }
                    else if (Model.SortViewModel.MeasurementSort == SortState.MeasurementDesc)
                    {
                        <span class="bi bi-arrow-down" style="margin-left: 5px;"></span>
                    }
                </a>
            </th>
            <th style="width: 150px;">@Html.DisplayNameFor(model => model.FilterGoodTypeViewModel.AmountOfFee)</th>
            <th style="width: 150px;" class="text-center">Действие</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.GoodTypes)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Measurement)</td>
                <td>@Html.DisplayFor(modelItem => item.AmountOfFee)</td>
                <td>
                    <div class="btn-group d-flex" role="group" aria-label="Basic example">
                        <a asp-action="Edit" asp-route-id="@item.GoodTypeId" class="btn btn-sm btn-primary me-1">Редактировать</a>
                        <a asp-action="Details" asp-route-id="@item.GoodTypeId" class="btn btn-sm btn-secondary me-1">Информация</a>
                        <a asp-action="Delete" asp-route-id="@item.GoodTypeId" class="btn btn-sm btn-danger">Удалить</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<page-link page-model="Model.PageViewModel" page-action="Index"
           page-url-Type="@Type"
           page-url-Measurement="@Measurement"
           page-url-sortOrder="@(Model.SortViewModel.CurrentState)"></page-link>